FROM alpine:3.7 AS PREPSTAGE
COPY . /
RUN tar -cf sources.tar src/ scripts/ public/ config/

FROM node:9 AS BUILDSTAGE
# make application directory if it doesn't exists
RUN mkdir -p /usr/src
# make tmp directory
RUN mkdir -p /usr/tmp
# set work directory
WORKDIR /usr/src
# install and cache app dependencies
COPY --from=PREPSTAGE package.json package-lock.json /usr/src/
# install npm dependencies
RUN npm install --silent
# copy sources package to this stage
COPY --from=PREPSTAGE sources.tar /usr/tmp/
RUN tar xf /usr/tmp/sources.tar
# build
RUN npm run build


FROM nginx:1-alpine AS STATICSTAGE
WORKDIR /usr/share/nginx/html
# copy static build of application
COPY --from=BUILDSTAGE /usr/src/build .

# expose port
EXPOSE 80

HEALTHCHECK CMD curl --fail http://localhost:80/
